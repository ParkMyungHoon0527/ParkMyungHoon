{\rtf1\ansi\ansicpg949\deff0\nouicompat\deflang1033\deflangfe1042{\fonttbl{\f0\froman\fprq2\fcharset129 \'b9\'d9\'c5\'c1;}{\f1\froman\fprq2\fcharset129 Calibri;}{\f2\froman\fprq2\fcharset129 \'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1;}{\f3\froman\fprq2\fcharset129 Times New Roman;}{\f4\fnil\fcharset129 \'b8\'bc\'c0\'ba \'b0\'ed\'b5\'f1;}}
{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\nowidctlpar\hyphpar0\sl-240\slmult0\qj\cf1\kerning1\f0\fs19\par
\trowd\trgaph10\trrh907\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx1988\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx9854 
\pard\intbl\nowidctlpar\hyphpar0\sl-240\slmult0\qc\tx4875\cf0\f2\fs20\'b1\'b3\'c0\'b0\f3  \f2\'c1\'a6\'b8\'f1\f1\fs22\cell 
\pard\intbl\nowidctlpar\hyphpar0\sl396\slmult1\f2\fs20 Python \f1\fs22\cell\row\trowd\trgaph10\trrh454\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx1988\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx9854 
\pard\intbl\nowidctlpar\hyphpar0\sl-240\slmult0\qc\tx4875\f2\fs20\'b1\'b3\'c0\'b0\f3  \f2\'c0\'cf\'bd\'c3\f1\fs22\cell 
\pard\intbl\nowidctlpar\hyphpar0\sl240\slmult1\tx4875\f2\fs20 21.09.17\f1\fs22\cell\row\trowd\trgaph10\trrh454\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx1988\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx9854 
\pard\intbl\nowidctlpar\hyphpar0\sl-240\slmult0\qc\tx4875\f2\fs20\'b1\'b3\'c0\'b0\f3  \f2\'c0\'e5\'bc\'d2\f1\fs22\cell 
\pard\intbl\nowidctlpar\hyphpar0\sl240\slmult1\qj\tx4875\f2\fs20\'bf\'b5\'bf\'ec\'b1\'db\'b7\'ce\'b9\'fa\'b7\'af\'b4\'d7 / discord \lang1042\'ba\'f1\'b4\'eb\'b8\'e9\f1\fs22\lang1033\cell\row\trowd\trgaph10\trrh454\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx9854 
\pard\intbl\nowidctlpar\hyphpar0\fi216\sl-240\slmult0\qc\tx4875\b\f2\'b1\'b3\'c0\'b0\f3  \f2\'b3\'bb\'bf\'eb\b0\f1\cell\row\trowd\trgaph10\trrh4508\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx1988\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx9854 
\pard\intbl\nowidctlpar\hyphpar0\sl-240\slmult0\qc\tx4875\f2\'bf\'c0\'c0\'fc\f1\cell 
\pard\intbl\nowidctlpar\hyphpar0\sl240\slmult1\'ba\'b9\'bd\'c0\par
input_str = ("\'b9\'ae\'c0\'da\'b8\'a6 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4 6\'b1\'db\'c0\'da \'c0\'cc\'bb\'f3 > ")\par
print(input_str[ 1 : 6 ]) #index\'b4\'c2 0\'ba\'ce\'c5\'cd \'bd\'c3\'c0\'db\par
print(input_str[ -3 : ])\par
print(input_str[-1])\par
\par
format \'c7\'d4\'bc\'f6\'bf\'a1 \'b4\'eb\'c7\'d8\'bc\'ad\par
format\'c0\'ba \'b9\'ae\'c0\'da\'bf\'ad\'b7\'ce \'c3\'e2\'b7\'c2\'c7\'cf\'b4\'c2 \'b0\'cd.\par
\'bc\'fd\'c0\'da -> \'b9\'ae\'c0\'da\par
\par
# format() \'c7\'d4\'bc\'f6 : \'b9\'ae\'c0\'da\'bf\'ad \'c6\'ed\'c1\'fd\par
print("\'c0\'d4\'b7\'c2\'b5\'c8 \'bc\'fd\'c0\'da\'b4\'c2 \{\}".format(10)) # \'c7\'d4\'bc\'f63(\'c7\'d4\'bc\'f62(\'c7\'d4\'bc\'f61()))\par
a_str = "\'c0\'d4\'b7\'c2\'b5\'c8 \'bc\'fd\'c0\'da\'b4\'c2 \{\}".format(30)\par
print(a_str, "format data type : ", type(a_str))\par
"\'c0\'d4\'b7\'c2\'b5\'c8 \'bc\'fd\'c0\'da\'b4\'c2 \{\}\'bf\'cd \{\}\'c0\'d4\'b4\'cf\'b4\'d9".format(10,20)\par
\par
a_str\par
len(a_str)  # \'b9\'ae\'c0\'da\'bf\'ad\'c0\'c7 \'b1\'e6\'c0\'cc\'b8\'a6 \'b1\'b8\'c7\'cf\'b4\'c2 \'c7\'d4\'bc\'f6\par
input_str = "\'c0\'d4\'b7\'c2\'b5\'c8 \'bc\'fd\'c0\'da\'b4\'c2 \{\}\'bf\'cd \{\}\'c0\'d4\'b4\'cf\'b4\'d9"\par
input_str.format(30,40)\par
\par
input_data = input("\'b5\'ce \'bc\'f6\'b8\'a6 \'c0\'d4\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4 > ")\par
input_num1 = input_data[0]\par
input_num2 = input_data[2]\par
print(input_str.format(input_num1, input_num2))\par
\par
format \'c7\'d4\'bc\'f6\'c0\'c7 \'b4\'d9\'be\'e7\'c7\'d1 \'b1\'e2\'b4\'c9\par
# \'c1\'a4\'bc\'f6\par
output_a = "\{:d\}".format(52)\par
\par
# \'c1\'a4\'bc\'f6\par
output_a = "\{:d\}".format(52)\par
\par
# \'c6\'af\'c1\'a4 \'c4\'ad\'bf\'a1 \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2\par
output_b = "\{:5d\}".format(52)\par
output_c = "\{:10d\}".format(52)\par
\par
# \'ba\'f3\'c4\'ad\'c0\'bb 0\'c0\'b8\'b7\'ce \'c3\'a4\'bf\'ec\'b1\'e2\par
output_d = "\{:05d\}".format(52)\par
output_d = "\{:05d\}".format(-52)\par
\par
print("# \'b1\'e2\'ba\'bb")\par
print(output_a)\par
print("\'c6\'af\'c1\'a4 \'c4\'ad\'bf\'a1 \'c3\'e2\'b7\'c2\'c7\'cf\'b1\'e2")\par
print(output_b);\par
print(output_c)\par
print("# \'ba\'f3 \'c4\'ad\'c0\'bb 0\'c0\'b8\'b7\'ce \'c3\'a4\'bf\'ec\'b1\'e2")\par
print(output_d);\par
print(output_e);\par
\par
\'ba\'ce\'b5\'bf \'bc\'d2\'bc\'f6\'c1\'a1 \'c3\'e2\'b7\'c2\'c0\'c7 \'b4\'d9\'be\'e7\'c7\'d1 \'c7\'fc\'c5\'c2\par
-float\par
:g -> \'bc\'d2\'bc\'f6\'c1\'a1 0.1\'c0\'ba \'ba\'b8\'c0\'cc\'c1\'f6\'b8\'b8 0.0\'bf\'a1\'bc\'ad .0\'c0\'ba \'be\'c8\'ba\'b8\'c0\'cc\'b0\'d4 \'c7\'cf\'b4\'c2\'b0\'cd\par
\par
float\'c0\'da\'b7\'e1\'c7\'fc \'b1\'e2\'ba\'bb\par
output_a = "\{:f\}".format(52.273)\par
output_b = "\{:15f\}".format(52.273)\par
output_c = "\{:+15f\}".format(52.273)\par
output_d = "\{:+015f\}".format(52.273)\par
\par
print(output_a)\par
print(output_b)\par
print(output_c)\par
print(output_d)\par
\par
\'bc\'d2\'bc\'f6\'c1\'a1 \'be\'c6\'b7\'a1 \'c0\'da\'b8\'b4\'bc\'f6 \'c1\'f6\'c1\'a4\'c7\'cf\'b1\'e2\par
output_a="\{:15.3f\}".format(52.273)\par
output_a="\{:15.2f\}".format(52.273)\par
output_a="\{:15.1f\}".format(52.273)\par
\par
print(output_a)\par
print(output_b)\par
print(output_c)\par
\par
\'c0\'c7\'b9\'cc \'be\'f8\'b4\'c2 \'bc\'d2\'bc\'f6\'c1\'a1 \'c1\'a6\'b0\'c5\'c7\'cf\'b1\'e2\par
output_a = 52.0\par
output_b = "\{:g\}".format(output_a)\par
print(output_a)\par
print(output_b)\par
\par
upper() \'bf\'cd lower() \'bf\'cd strip()\par
# \'b9\'ae\'c0\'da\'bf\'ad \'b0\'fc\'b7\'c3 \'c7\'d4\'bc\'f6 : upper() , lower () , strip() , lstrip() , rstrip()\par
a_str = " Hello python programming "\par
print(a_str.upper())   # \'b4\'eb\'b9\'ae\'c0\'da\'b7\'ce\par
print(a_str.lower())   # \'bc\'d2\'b9\'ae\'c0\'da\'b7\'ce\par
print("-\{\}-".format(a-str))\par
print("-\{\}-".format(a_str.strip()))   \par
print("-\{\}-".format(a_str.lstrip()))  \par
print("-\{\}-".format(a_str.rstrip()))  \par
\par
print(a_str.lsalnum()) # alpha or number \'c0\'ce\'c1\'f6 \'c8\'ae\'c0\'ce\par
\par
in \'bf\'ac\'bb\'ea\'c0\'da\par
print("\'be\'c8\'b3\'e7" in "\'be\'c8\'b3\'e7\'c7\'cf\'bc\'bc\'bf\'e4")\par
\par
split() \'c7\'d4\'bc\'f6\par
# 1. \'b9\'ae\'c0\'da \'c0\'d4\'b7\'c2\par
input_str = input("\'b5\'ce \'bc\'f6\'b8\'a6 \'c0\'d4\'b7\'c2 > ")\par
# 2. \'b9\'ae\'c0\'da\'b8\'a6 \'ba\'d0\'b8\'ae (\'b5\'ce \'b0\'b3\'c0\'c7 \'bc\'fd\'c0\'da(\'b9\'ae\'c0\'da)\'b7\'ce), # 3. \'b9\'ae\'c0\'da\'b8\'a6 \'bc\'fd\'c0\'da\'b7\'ce \'ba\'af\'c8\'af\par
split_str = input_str.split()\par
input_num1 = float(split_str[0])\par
input_num2 = float(split_str[1])\par
\par
# 4. \'b0\'e8\'bb\'ea\'c7\'d8\'bc\'ad \'b0\'e1\'b0\'fa \'c3\'e2\'b7\'c2\par
print(input_num1, " / " , input_num2, " = ", "\{:7.3f\}".format(input_num1/input_num2))\par
"\{\} / \{\} = \{:7.3f\}".format(input_num1 , input_num2,input_num1/input_num2)\par
\par
\'ba\'d2 \'c0\'da\'b7\'e1\'c7\'fc\'b0\'fa if\'c1\'b6\'b0\'c7\'b9\'ae\par
\'ba\'d2\'b8\'ae\'be\'f0 \'ba\'f1\'b1\'b3 \'bf\'ac\'bb\'ea\'c0\'da \'b3\'ed\'b8\'ae \'bf\'ac\'bb\'ea\'c0\'da\par
if\'c1\'b6\'b0\'c7\'b9\'ae\par
\'c7\'c1\'b7\'ce\'b1\'d7\'b7\'a1\'b9\'d6 \'be\'f0\'be\'ee\'bf\'a1\'b4\'c2 \'b1\'e2\'ba\'bb\'c0\'fb\'c0\'ce \'c0\'da\'b7\'e1\'c7\'fc\'c0\'b8\'b7\'ce \'c2\'fc\'b0\'fa \'b0\'c5\'c1\'fe\'c0\'bb \'b3\'aa\'c5\'b8\'b3\'bb\'b4\'c2 \'b0\'aa\'c0\'cc \'c0\'d6\'c0\'b8\'b8\'e7,\par
\'c0\'cc\'b8\'a6 \'ba\'d2(boolean)\'c0\'cc\'b6\'f3\'b0\'ed \'c7\'d1\'b4\'d9.\par
True\'bf\'cd False \'b0\'aa\'b8\'b8 \'b0\'a1\'c1\'fa \'bc\'f6 \'c0\'d6\'b4\'d9.\par
= \'c7\'cf\'b3\'aa\'b4\'c2 \'b4\'eb\'c0\'d4\par
== \'b0\'b0\'b4\'d9 (\'ba\'f1\'b1\'b3 \'bf\'ac\'bb\'ea\'c0\'da)\par
x = 10\par
under_20 = x < 20\par
print("under_20:", under_20)\par
print("not under_20:",not under_20)\par
\par
# \'b9\'ae) \'c5\'b0\'ba\'b8\'b5\'e5\'bf\'a1\'bc\'ad \'b5\'ce \'bc\'f6\'b8\'a6 \'c0\'d4\'b7\'c2\'b9\'de\'be\'c6 \'b5\'ce \'bc\'f6\'b0\'a1 \'b0\'b0\'c0\'b8\'b8\'e9 True\'b8\'a6 \'b4\'d9\'b8\'a3\'b8\'e9 False\'b8\'a6 \'c3\'e2\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4\par
input_str = input(" \'b5\'ce \'bc\'f6\'b8\'a6 \'c0\'d4\'b7\'c2 > ")\par
split_num = input_str.split()\par
print(int(split_num[0]) < and int(split_num[1] < 10 ) # \'b5\'d1 \'b4\'d9 true\'b8\'e9 true \'be\'c6\'b4\'cf\'b8\'e9 false\par
print(int(split_num[0]) < or int(split_num[1] < 10 ) # \'b5\'d1 \'c1\'df\'c0\'c7 \'c7\'cf\'b3\'aa\'b8\'b8 true\'b8\'e9 true\par
\par
if\'c1\'b6\'b0\'c7\'b9\'ae\par
: \'c5\'ac\'b7\'d0\'c0\'bb \'b9\'dd\'b5\'e5\'bd\'c3 \'bd\'e1\'c1\'e0\'be\'df \'c0\'ce\'bd\'c4\'c0\'bb \'c7\'d1\'b4\'d9.\par
\tab\'b5\'e9\'bf\'a9\'be\'b2\'b1\'e2\'b0\'a1 \'b5\'e9\'be\'ee\'b0\'a3\'b4\'d9\par
if True:\par
\tab print("\'c1\'a4\'b8\'bb true \'c0\'d4\'b4\'cf\'b4\'d9")\par
\'b5\'e9\'bf\'a9\'be\'b2\'b1\'e2\'b4\'c2 \'c5\'c7\'c0\'b8\'b7\'ce \'b8\'b9\'c0\'cc \'bb\'e7\'bf\'eb\par
# if \'c1\'b6\'b0\'c7\'b9\'ae:\par
#    \'b5\'e9\'bf\'a9\'be\'b2\'b1\'e2\'b7\'ce \'b9\'ae\'c0\'e5 \'c3\'b3\'b8\'ae\par
if True :\par
    print("\'c1\'b6\'b0\'c7\'b9\'ae \'c3\'b3\'b8\'ae ")\par
    print("\'c1\'b6\'b0\'c7\'b9\'ae \'c3\'b3\'b8\'ae 111")\par
if False:\par
    print("\'c1\'b6\'b0\'c7\'b9\'ae \'c3\'b3\'b8\'ae 222")\par
    print("\'c1\'b6\'b0\'c7\'b9\'ae \'c3\'b3\'b8\'ae 333")\par
print("\'c1\'b6\'b0\'c7\'b9\'ae \'b3\'aa\'bf\'c8")\par
\par
# \'b9\'ae) 1. \'b5\'ce \'bc\'f6\'b8\'a6 \'c0\'d4\'b7\'c2\'b9\'de\'be\'c6 \'b5\'ce \'bc\'f6\'b0\'a1 0\'ba\'b8\'b4\'d9 \'c5\'a9\'b8\'e9 \'c5\'f5 \'bc\'f6\'c0\'c7 \'c7\'d5\'c0\'bb \'c3\'e2\'b7\'c2\par
num1 = int(input(" \'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2 > "));\par
num2 = int(input(" \'bc\'fd\'c0\'da \'c0\'d4\'b7\'c2 > "))\par
if num1 >0 and num2 > 0 :\par
    print(num1, " + ", num2, " = " , num1+num2)\par
if num1 > num2:\par
    print(num1, " - ", num2, " = " , num1-num2)\par
if num1 < num2:\par
    print(num2, " - ", num1, " = " , num2-num1)\par
if num1 !=0 and num2 !=0 :\par
    if num1 > num2:\par
        print(num1, " % ", num2, " = ", num1%num2)\par
    if num1 < num2:\par
        print(num2, " % ", num1, " = ", num2%num1)\cell\row\trowd\trgaph10\trrh5235\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx1988\clvertalc\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf1\clbrdrt\brdrw10\brdrs\brdrcf1\clbrdrr\brdrw10\brdrs\brdrcf1\clbrdrb\brdrw10\brdrs\brdrcf1 \cellx9854 
\pard\intbl\nowidctlpar\hyphpar0\sl-240\slmult0\qc\tx4875\f2\'bf\'c0\'c8\'c4\f1\cell 
\pard\intbl\nowidctlpar\hyphpar0\sl240\slmult1\par
else / elif / if / false / pass\par
\par
# \'c0\'d4\'b7\'c2\'c0\'bb \'b9\'de\'bd\'c0\'b4\'cf\'b4\'d9.\par
number = input ("\'c1\'a4\'bc\'f6 \'c0\'d4\'b7\'c2> ")\par
number = int(number)\par
\par
#\'c1\'b6\'b0\'c7\'c0\'bb \'bb\'e7\'bf\'eb\'c7\'d5\'b4\'cf\'b4\'d9\par
if  number % 2 == 0 :\par
    # \'c1\'b6\'b0\'c7\'c0\'cc \'c2\'fc\'c0\'cf \'b6\'a7, \'c1\'ef \'c2\'a6\'bc\'f6 \'c1\'b6\'b0\'c7\par
    print("\'c2\'a6\'bc\'f6\'c0\'d4\'b4\'cf\'b4\'d9")\par
else:\par
    # \'c1\'b6\'b0\'c7\'c0\'cc \'b0\'c5\'c1\'fe\'c0\'cf \'b6\'a7, \'c1\'ef \'c8\'a6\'bc\'f6 \'c1\'b6\'b0\'c7\par
    print("\'c8\'a6\'bc\'f6\'c0\'d4\'b4\'cf\'b4\'d9")\par
\par
\par
elif \'c1\'b6\'b0\'c7\'c0\'cc 3\'b0\'b3 \'c0\'cc\'bb\'f3\'c0\'cf\'b6\'a7 if \'c1\'b6\'b0\'c7\'b9\'ae\'b0\'fa else \'b1\'b8\'b9\'ae \'bb\'e7\'c0\'cc\'bf\'a1 \'c0\'d4\'b7\'c2\par
\par
if \'c1\'b6\'b0\'c7\'b9\'ae ->\par
elif \'c1\'b6\'b0\'c7\'b9\'ae ->\par
else \'b1\'b8\'b9\'ae \par
\par
# if, if ~ else, if ~ elif ~ else\par
# \'bc\'ba\'c0\'fb\'c0\'bb \'c0\'d4\'b7\'c2 \'b9\'de\'be\'c6 \'b5\'ee\'b1\'de\'c0\'bb \'ba\'ce\'bf\'a9\'c7\'d8\'bc\'ad \'c3\'e2\'b7\'c2\par
# 60\'b9\'cc\'b8\'b8\'c0\'ba F, 61~70 D, 71~80 C, 81~90 B, 91~100 A\par
\par
score = int(input("\'bc\'ba\'c0\'fb \'c0\'d4\'b7\'c2 : "))\par
\par
if score >90  :\par
    print('A')\par
elif 80 < score <= 90   :\par
    print('B')\par
elif 70 < score <= 80  :\par
    print('c')\par
elif 60 < score <= 70  :\par
    print('D')\par
\tab #\'b3\'aa\'c1\'df\'bf\'a1 \'c3\'b3\'b8\'ae\par
\tab pass\par
else  :\par
    print('F')\par
\par
\par
#\'b9\'ae) \'bc\'fd\'c0\'da \'bf\'ac\'bb\'ea\'c0\'da\'b1\'e2\'c8\'a3 \'bc\'fd\'c0\'da\'b8\'a6 \'c0\'d4\'b7\'c2\'b9\'de\'be\'c6 \'bf\'ac\'bb\'ea\'c0\'da \'b1\'e2\'c8\'a3\'b0\'a1 '+' \'c0\'cc\'b8\'e9 \'b5\'ce \'bc\'fd\'c0\'da\'c0\'c7 \'c7\'d5\'c0\'bb\par
# '-' \'c0\'cc\'b8\'e9 \'b5\'ce \'bc\'f6\'c0\'c7 \'c2\'f7\'b8\'a6, '*'\'c0\'cc\'b8\'e9 \'b5\'ce \'bc\'f6\'c0\'c7 \'b0\'f6\'c0\'bb, \'be\'c6\'b4\'cf\'b8\'e9 "\'b1\'e2\'c8\'a3 \'bf\'c0\'b7\'f9" \'b9\'ae\'c0\'da \'c3\'e2\'b7\'c2\par
\par
input_str = input("\'b0\'e8\'bb\'ea\'bd\'c4 \'c0\'d4\'b7\'c2 :> ")\par
num1 = int(input_str.split()[0])\par
buho = input_str.split()[1]\par
num2 = int(input_str.split()[2])\par
comp_var = "\{\} \{\} \{\} = ".format(num1,buho,num2)\par
if buho == '+':\par
    print(comp_var, num1+num2)\par
elif buho == '-':\par
    print(comp_var, num1-num2)\par
elif buho == '*':\par
    print(comp_var, num1*num2)\par
else :\par
    print("\'b1\'e2\'c8\'a3 \'bf\'c0\'b7\'f9")\par
\par
\par
\'b8\'ae\'bd\'ba\'c6\'ae\par
\'b8\'ae\'bd\'ba\'c6\'ae \'bf\'ac\'bb\'ea\'c0\'da : \'bf\'ac\'b0\'e1(+), \'b9\'dd\'ba\'b9(*), len()\par
\'b8\'ae\'bd\'ba\'c6\'ae\'bf\'a1 \'bf\'e4\'bc\'d2 \'c3\'df\'b0\'a1 : append, insert\par
\'b8\'ae\'bd\'ba\'c6\'ae\'bf\'a1 \'bf\'e4\'bc\'d2 \'c1\'a6\'b0\'c5 : del\par
\'b8\'ae\'bd\'ba\'c6\'ae \'b3\'bb\'ba\'ce\'bf\'a1 \'c0\'d6\'b4\'c2\'c1\'f6 \'c8\'ae\'c0\'ce in / not in\par
for\'b9\'dd\'ba\'b9\'b9\'ae\par
\par
 \'b8\'ae\'bd\'ba\'c6\'ae\'b4\'c2 \'c0\'ce\'b5\'a6\'bd\'ba\'b0\'a1 \'c1\'df\'bf\'e4\'c7\'cf\'b4\'d9.\par
\par
array = [273, 32, 103, "\'b9\'ae\'c0\'da\'bf\'ad", True, False]\par
print(array)\par
[273, 32, 103, "\'b9\'ae\'c0\'da\'bf\'ad", True, False]\par
\par
## list : [ , , ....] -> \'bf\'a9\'b7\'af\'b0\'b3\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'c1\'fd\'c7\'d5\par
# list \'c3\'df\'b0\'a1 : list\'b8\'ed.append(), list\'b8\'ed.insert(index, \'c3\'df\'b0\'a1\'b5\'a5\'c0\'cc\'c5\'cd), list\'b8\'ed.extend(\'c3\'df\'b0\'a1\'c7\'d2\'b8\'ae\'bd\'ba\'c6\'ae)\par
# list \'bb\'e8\'c1\'a6 : list\'b8\'ed.pop(index), list\'b8\'ed.pop(2:index), del list\'b8\'ed[index]\par
# list \'b0\'aa\'c0\'b8\'b7\'ce \'bb\'e8\'c1\'a6 : list\'b8\'ed.remove(\'b0\'aa)\par
# list\'c0\'c7 \'b8\'f0\'b5\'e7 \'b0\'aa \'bb\'e8\'c1\'a6 : list\'b8\'ed.clear()\par
a_list = [ "abc", "test", 123 , True, 78, "python", [1,2,3]]\par
a_list[0]  # "abc"\par
a_list[0][0]  # 'a'\par
a_list[-1][2]  # 't'   3\par
\par
b_list = [1,2,3]; c_list = [4,5,6]\par
print(b_list + c_list)  # list \'bf\'ac\'bb\'ea + \'b5\'ce \'b0\'b3\'c0\'c7 \'b8\'ae\'bd\'ba\'c6\'ae \'b0\'e1\'c7\'d5, * \'b9\'dd\'ba\'b9\par
print(b_list *3)\par
\par
a_list.append("add")  # list\'c0\'c7 \'b8\'b6\'c1\'f6\'b8\'b7\'bf\'a1 \'bf\'e4\'bc\'d2 \'c3\'df\'b0\'a1\par
print(a_list)\par
a_list.insert(2, "insert data")  # \'bf\'f8\'c7\'cf\'b4\'c2 \'c0\'a7\'c4\'a1\'bf\'a1 \'b5\'a5\'c0\'cc\'c5\'cd \'c3\'df\'b0\'a1\par
print(a_list)\par
len(a_list)\par
print(b_list)\par
b_list.extend(c_list)  # b_list\'bf\'a1 c_list\'c0\'c7 \'b0\'aa\'c0\'bb \'c3\'df\'b0\'a1 \'b1\'e2\'c1\'b8\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd \'ba\'af\'b0\'e6\par
print(b_list)\par
print(b_list.pop())\par
b_list\par
del a_list[-1]\par
a_list\par
\par
# \'b9\'ae) \'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'d4\'b7\'c2 \'b9\'de\'be\'c6 \'b8\'ae\'bd\'ba\'c6\'ae\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'d1 \'c8\'c4\par
# 1. \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'e2\'b7\'c2 \'c8\'c4 \'bb\'e8\'c1\'a6\par
# 2. 3\'b9\'f8\'c2\'b0 \'c0\'ce\'b5\'a6\'bd\'ba\'c0\'c7 \'b0\'aa\'c0\'bb \'c3\'e2\'b7\'c2\par
# 3. \'c3\'df\'b0\'a1\'b7\'ce \'bf\'a9\'b7\'af \'b0\'b3\'c0\'c7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c0\'d4\'b7\'c2 \'b9\'de\'be\'c6 \'b1\'e2\'c1\'b8\'c0\'c7 \'b8\'ae\'bd\'ba\'c6\'ae\'bf\'a1 \'c3\'df\'b0\'a1 \'c8\'c4 \'c3\'e2\'b7\'c2\par
# 4. \'c3\'b3\'c0\'bd \'c0\'d4\'b7\'c2\'c7\'d1 \'b5\'a5\'c0\'cc\'c5\'cd\'c0\'c7 \'b8\'ae\'bd\'ba\'c6\'ae \'ba\'af\'bc\'f6\'b8\'a6 clear\par
f_list = input("input data :").split()  # \'c0\'da\'b7\'e1 \'c0\'d4\'b7\'c2\par
print(f_list, len(f_list)) # \'c0\'d4\'b7\'c2\'c7\'d1 \'c0\'da\'b7\'e1 \'b8\'ae\'bd\'ba\'c6\'ae \'c3\'e2\'b7\'c2, \'b0\'b9\'bc\'f6 \'c3\'e2\'b7\'c2\par
print(f_list.pop()) # 1. \'b8\'b6\'c1\'f6\'b8\'b7 \'b5\'a5\'c0\'cc\'c5\'cd\'b8\'a6 \'c3\'e2\'b7\'c2 \'c8\'c4 \'bb\'e8\'c1\'a6\par
print(f_list[3]) # 2,3\'b9\'f8\'c2\'b0 \'c0\'ce\'b5\'a6\'bd\'ba\'c0\'c7 \'b0\'aa\'c0\'bb \'c3\'e2\'b7\'c2\par
\par
f.list.extend(input("input data : ").split()) # \'b5\'ce\'b9\'f8\'c2\'b0 \'c0\'da\'b7\'e1 \'c0\'d4\'b7\'c2 \'c8\'c4 \'b1\'e2\'c1\'b8\'c0\'c7 list\'bf\'a1 \'c3\'df\'b0\'a1\par
print(f_list)\par
print(f_list.clear())\par
\par
\par
\'b8\'ae\'bd\'ba\'c6\'ae\'bf\'a1 \'bf\'e4\'bc\'d2 \'c3\'df\'b0\'a1\'c7\'cf\'b1\'e2\par
append() \'bf\'cd insert()\par
\par
\'b8\'ae\'bd\'ba\'c6\'ae\'bf\'a1 \'bf\'e4\'bc\'d2 \'c1\'a6\'b0\'c5\'c7\'cf\'b1\'e2\par
del() \'bf\'cd remove(\'b0\'aa) list.clear()\par
\par
\'b8\'ae\'bd\'ba\'c6\'ae \'b3\'bb\'ba\'ce\'bf\'a1 \'c0\'d6\'b4\'c2\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'cf\'b1\'e2\par
in / not in\par
\par
for \'b9\'dd\'ba\'b9\'b9\'ae\par
print("\'c3\'e2\'b7\'c2")       \par
print("\'c3\'e2\'b7\'c2")\par
print("\'c3\'e2\'b7\'c2")  -> for i in range(100):   \par
print("\'c3\'e2\'b7\'c2")      print("\'c3\'e2\'b7\'c2")         #"\'c3\'e2\'b7\'c2"\'c0\'bb 100\'c8\'b8 \'b9\'dd\'ba\'b9 \'c3\'e2\'b7\'c2\par
print("\'c3\'e2\'b7\'c2")  \par
\par
for + \'ba\'af\'bc\'f6 + in + \'b9\'fc\'c0\'a7 (\'b9\'dd\'ba\'b9)\par
\par
 a_list = [ "abc", "test", 123 , True, 78, "python", [1,2,3]]\par
# \'b9\'dd\'ba\'b9\'b9\'ae for \'ba\'af\'bc\'f6 in \'b9\'dd\'ba\'b9\'c0\'da\'b7\'e1:\par
#          \'c3\'b3\'b8\'ae\'b9\'ae\par
for i_var in a_list:\par
    print(i_var)\par
    \par
for i in range(5):     # 5\'c8\'b8 \'b9\'dd\'ba\'b9\par
        print("\'b9\'dd\'ba\'b9", i)\par
\par
for char in "Hello":\par
    print(char, ' - ')\par
    \par
#\'c5\'b0\'ba\'b8\'b5\'e5\'b7\'ce \'c0\'d4\'b7\'c2\'c0\'bb \'b9\'de\'be\'c6 \'b8\'ae\'bd\'ba\'c6\'ae\'bf\'a1 \'c0\'fa\'c0\'e5\'c7\'d1 \'c8\'c4 \'c0\'d4\'b7\'c2\'c7\'d1 \'c0\'da\'b7\'e1\'b0\'a1 \'bc\'fd\'c0\'da\'c0\'cc\'b8\'e9 \'c7\'d5\'c0\'bb \'b1\'b8\'c7\'d8\'bc\'ad \'c3\'e2\'b7\'c2\'c7\'cf\'bc\'bc\'bf\'e4\par
# 1. input \'c0\'da\'b7\'e1\'b8\'a6 \'b8\'ae\'bd\'ba\'c6\'ae\'b7\'ce \'c3\'df\'b0\'a1\par
# 2. \'b8\'ae\'bd\'ba\'c6\'ae\'c0\'c7 \'c0\'da\'b7\'e1\'b8\'a6 \'c7\'cf\'b3\'aa\'be\'bf \'ba\'f1\'b1\'b3 ( \'bc\'fd\'c0\'da\'c0\'ce\'c1\'f6 ) \'b9\'dd\'ba\'b9\'b9\'ae \'bd\'c7\'c7\'e0\par
# 3. \'bc\'fd\'c0\'da\'c0\'cc\'b8\'e9 \'c7\'d5\'c0\'bb \'b1\'b8\'c7\'d4\par
# 4. \'b9\'dd\'ba\'b9\'b9\'ae \'b3\'a1\'b3\'ad \'c8\'c4 \'c7\'d5\'c0\'bb \'c3\'e2\'b7\'c2\par
a_list = input("input data : ").split()\par
total = 0\par
for var in a_list:\par
    if var.isnumeric():    # \'c0\'d4\'b7\'c2\'b5\'c8 \'c0\'da\'b7\'e1\'b0\'a1 \'bc\'fd\'c0\'da\'c0\'ce\'c1\'f6 \'c8\'ae\'c0\'ce\par
        total += int(var)  # \'bc\'fd\'c0\'da\'c0\'cc\'b8\'e9 \'c7\'d5\'b0\'e8 \'b1\'b8\'c7\'d4\par
print("total : ", total) \par
\par
\par
# \'bc\'fd\'c0\'da\'b8\'a6 \'c0\'d4\'b7\'c2\'b9\'de\'be\'c6 \'c7\'d8\'b4\'e7\'c7\'cf\'b4\'c2 \'bc\'fd\'c0\'da\'c0\'c7 \'b1\'b8\'b1\'b8\'b4\'dc\'c0\'bb \'c3\'e2\'b7\'c2 \'c7\'cf\'bc\'bc\'bf\'e4\par
# 3\par
# 3 * 1 = 3\par
# 3 * 2 = 6\par
\par
input_num = int(input("input number : "))\par
for i in range(9):\par
    print("\{\} * \{\} = \{\}".format(input_num, i+1, input_num * (i+1)))\par
\par
# 1. \'bc\'fd\'c0\'da\'bf\'cd \'b9\'ae\'c0\'da\'bf\'ad\'c0\'c7 \'b4\'d9\'be\'e7\'c7\'d1 \'b1\'e2\'b4\'c9 : format() " \{ \} \'b9\'ae\'c0\'da \{ \} ".format(1,2)\par
# 2. \'b9\'ae\'c0\'da\'bf\'ad \'b1\'b8\'bc\'ba \'c6\'c4\'be\'c7\'c7\'cf\'b1\'e2 is\'c7\'d4\'bc\'f6\'b8\'ed() -> True \'b6\'c7\'b4\'c2 False\par
# 3. \'b9\'ae\'c0\'da\'bf\'ad \'c0\'da\'b8\'a3\'b1\'e2 : split() -> \'b9\'ae\'c0\'da\'bf\'ad.split()\par
# 4. \'c1\'b6\'b0\'c7\'b9\'ae : if \'c1\'b6\'b0\'c7\'bd\'c4: , if ~ else, if~ elif \'c1\'b6\'b0\'c7\'bd\'c4 : ~ elif . . . ~ else : \'c1\'b6\'b0\'c7\'bd\'c4 \'be\'f8\'c0\'bd\par
# 5. \'b3\'af\'c2\'a5, \'bd\'c3\'b0\'a3 \'c7\'d4\'bc\'f6 : datetime, import \'c0\'c7\'b9\'cc, import datetime as dt -> alias\'b8\'ed\'c0\'bb \'bb\'e7\'bf\'eb\par
# 6. list -> \'b0\'fc\'b7\'c3\'c7\'d4\'bc\'f6 append(), extend(), pop(), insert(), remove(), clear(), del\par
# 7. \'b9\'dd\'ba\'b9\'b9\'ae -> for \'ba\'af\'bc\'f6 in \'b8\'ae\'bd\'ba\'c6\'ae:\cell\row 
\pard\sa200\sl276\slmult1\kerning0\f4\fs20\lang18\par
}
 